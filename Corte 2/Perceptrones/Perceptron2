inputs=[1,2,3,4]
targets=[2,4,6,8]
w=0.1
epoach= 30
learnig_rate=0.1

def predict(i):
  return w*i

for _ in range(epoach):
  pred=[predict(i)for i in inputs]
  errors=[(p-t)**2 for p, t in zip(pred,targets)]
  cost=sum (errors)/len(targets)
  errors_d=[2*(p-t) for p, t in zip(pred,targets)]
  weight_d=[e*i for e, i in zip(errors_d,inputs)]
  w-=learnig_rate*sum(weight_d)/len(weight_d)


  print(f" Weigth:{w:.2f} Cost:  {cost:.2f}")


     
 Weigth:2.95 Cost:  27.08
 Weigth:1.52 Cost:  6.77
 Weigth:2.24 Cost:  1.69
 Weigth:1.88 Cost:  0.42
 Weigth:2.06 Cost:  0.11
 Weigth:1.97 Cost:  0.03
 Weigth:2.01 Cost:  0.01
 Weigth:1.99 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
 Weigth:2.00 Cost:  0.00
